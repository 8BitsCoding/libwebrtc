#
# Create package
#
set(CPACK_PACKAGE_NAME "${LIBWEBRTC_MAJOR_VERSION}")
set(CPACK_PACKAGE_VERSION_MAJOR "${LIBWEBRTC_MAJOR_VERSION}")
set(CPACK_PACKAGE_VERSION_MINOR "${LIBWEBRTC_MINOR_VERSION}")
set(CPACK_PACKAGE_VERSION_PATCH "${LIBWEBRTC_PATCH_VERSION}")

set(CPACK_INSTALL_CMAKE_PROJECTS
    "${CPACK_INSTALL_CMAKE_PROJECTS};${CMAKE_BINARY_DIR}/libwebrtc;libwebrtc;ALL;/")

if (WIN32)
  set(CPACK_GENERATOR "7Z")
else (WIN32)
  set(CPACK_GENERATOR "TGZ")
endif (WIN32)

if (CMAKE_SYSTEM_NAME MATCHES "Linux")
  set(LIBWEBRTC_PLATFORM "linux")
elseif (CMAKE_SYSTEM_NAME MATCHES "Darwin")
  set(LIBWEBRTC_PLATFORM "mac")
elseif (CMAKE_SYSTEM_NAME MATCHES "Windows")
  set(LIBWEBRTC_PLATFORM "win32")
endif ()

if (CMAKE_SYSTEM_PROCESSOR MATCHES "^arm")
  set(LIBWEBRTC_ARCH "arm")
elseif (CMAKE_SYSTEM_PROCESSOR MATCHES "^i.86$")
  set(LIBWEBRTC_ARCH "x86")
elseif (CMAKE_SYSTEM_PROCESSOR MATCHES "^x86.64$")
  set(LIBWEBRTC_ARCH "x64")
elseif (CMAKE_SYSTEM_PROCESSOR STREQUAL "AMD64")
  set(LIBWEBRTC_ARCH "x64")
elseif (CMAKE_SYSTEM_PROCESSOR STREQUAL "powerpc")
  set(LIBWEBRTC_ARCH "ppc")
elseif (CMAKE_SYSTEM_PROCESSOR STREQUAL "powerpc64")
  set(LIBWEBRTC_ARCH "ppc64")
else ()
  set(LIBWEBRTC_ARCH "${CMAKE_SYSTEM_PROCESSOR}")
endif ()

set(CPACK_INCLUDE_TOPLEVEL_DIRECTORY 0)
set(CPACK_PACKAGE_FILE_NAME "libwebrtc-${LIBWEBRTC_VERSION}-${LIBWEBRTC_PLATFORM}-${LIBWEBRTC_ARCH}")
set(CPACK_PACKAGE_INSTALL_DIRECTORY "libwebrtc")

include(CPack)